//Seguimiento de Proyectos de Software
using System;
using System.Collections.Generic;

// Clase para representar un Proyecto
class Proyecto
{
    public string Nombre { get; set; }
    public string Descripcion { get; set; }
    public string Estado { get; set; } // Por ejemplo: "En Progreso", "Completado", "Pendiente"

    public Proyecto(string nombre, string descripcion)
    {
        Nombre = nombre;
        Descripcion = descripcion;
        Estado = "Pendiente"; // Estado inicial por defecto
    }

    public void MostrarDetalles()
    {
        Console.WriteLine($"Nombre: {Nombre}");
        Console.WriteLine($"Descripción: {Descripcion}");
        Console.WriteLine($"Estado: {Estado}");
        Console.WriteLine();
    }

    public void ActualizarEstado(string nuevoEstado)
    {
        Estado = nuevoEstado;
        Console.WriteLine($"El estado del proyecto '{Nombre}' ha sido actualizado a '{Estado}'.");
    }
}

// Clase para gestionar proyectos
class SeguimientoProyectos
{
    private List<Proyecto> proyectos = new List<Proyecto>();

    public void AgregarProyecto()
    {
        Console.Write("Ingrese el nombre del proyecto: ");
        string nombre = Console.ReadLine();
        Console.Write("Ingrese la descripción del proyecto: ");
        string descripcion = Console.ReadLine();

        Proyecto nuevoProyecto = new Proyecto(nombre, descripcion);
        proyectos.Add(nuevoProyecto);
        Console.WriteLine("Proyecto agregado con éxito.");
    }

    public void VerProyectos()
    {
        if (proyectos.Count == 0)
        {
            Console.WriteLine("No hay proyectos registrados.");
        }
        else
        {
            Console.WriteLine("\n--- Lista de Proyectos ---");
            foreach (Proyecto proyecto in proyectos)
            {
                proyecto.MostrarDetalles();
            }
        }
    }

    public void ActualizarEstadoProyecto()
    {
        Console.Write("Ingrese el nombre del proyecto para actualizar: ");
        string nombre = Console.ReadLine();

        Proyecto proyectoEncontrado = proyectos.Find(p => p.Nombre.ToLower() == nombre.ToLower());
        
        if (proyectoEncontrado != null)
        {
            Console.Write("Ingrese el nuevo estado (En Progreso, Completado, Pendiente): ");
            string nuevoEstado = Console.ReadLine();
            proyectoEncontrado.ActualizarEstado(nuevoEstado);
        }
        else
        {
            Console.WriteLine("Proyecto no encontrado.");
        }
    }
}

// Clase principal para manejar el flujo de la aplicación
class ProgramaPrincipal
{
    static void Main(string[] args)
    {
        SeguimientoProyectos gestionProyectos = new SeguimientoProyectos();
        int opcion;

        do
        {
            Console.WriteLine("\n--- Sistema de Seguimiento de Proyectos ---");
            Console.WriteLine("1. Agregar un nuevo proyecto");
            Console.WriteLine("2. Ver todos los proyectos");
            Console.WriteLine("3. Actualizar el estado de un proyecto");
            Console.WriteLine("4. Salir");
            Console.Write("Seleccione una opción: ");
            opcion = Convert.ToInt32(Console.ReadLine());

            switch (opcion)
            {
                case 1:
                    gestionProyectos.AgregarProyecto();
                    break;
                case 2:
                    gestionProyectos.VerProyectos();
                    break;
                case 3:
                    gestionProyectos.ActualizarEstadoProyecto();
                    break;
                case 4:
                    Console.WriteLine("Saliendo del sistema...");
                    break;
                default:
                    Console.WriteLine("Opción no válida.");
                    break;
            }

        } while (opcion != 4);
    }
}
